##Autonation

#Set to Running
#  - alias: "Dryer - Set Mode Running"
#    hide_entity: False
#    trigger:
#      - platform: state
#        entity_id: binary_sensor.dryer_vibration
#        to: 'on'
#        for:
#          minutes: 2
#    condition:
#      condition: and
#      conditions:
#        - condition: state
#          entity_id: binary_sensor.dryer_door
#          state: 'off'
#        - condition: state
#          entity_id: input_select.dryer_status
#          state: 'Idle'
#   action:
#      - service: input_select.select_option
#        data:
#          entity_id: input_select.dryer_status
#          option: Running

#Set to Clean
  - alias: "Dryer - Set Mode Clean"
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dryer_vibration
        to: 'off'
        for:
          minutes: 5
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.dryer_door
          state: 'off'
        - condition: state
          entity_id: input_select.dryer_status
          state: 'Running'
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.dryer_status
          option: Clean

#Set to Idle
  - alias: "Dryer - Set Mode Idle"
    hide_entity: False
    trigger:
      - platform: binary_sensor.dryer_vibration
        entity_id: 
        to: 'on'
        for:
          seconds: 5
    condition:
    - condition: state
      entity_id: input_select.dryer_status
      state: 'Clean'
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.dryer_status
          option: Idle
          
####HEATER CONTROL####

  - alias: 'Turn Heater in Playroom'
    hide_entity: True
    trigger:
      - platform: state
        entity_id: media_player.lg_webos_smart_tv
        to: 'playing'
    condition:
      - condition: state
        entity_id: group.all_mobile_devices
        state: 'home'
      - condition: template
        value_template: '{{ (states.sensor.dark_sky_temperature.state) < "50" }}'
    action:
      service: swtich.turn_on
      entity_id: switch.play_room_heater


  - alias: 'Turn Heater off with TV'
    hide_entity: True
    trigger:
      - platform: state
        entity_id: media_player.lg_webos_smart_tv
        to: 'off'
        for:
          minutes: 5
      - platform: template
        value_template: '{{ (states.sensor.dark_sky_temperature.state) > "55" }}'
    action:
      service: swtich.turn_off
      entity_id: switch.play_room_heater
      
      ##Set away on ST from HA
  - alias: "Trigger ST Away Mode"
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_select.home_status
        to: 'Away'
    action:
      - service: swtich.turn_on
        entity_id: switch.st_awayhome_switch

  ##Set home on ST from HA
  - alias: "Trigger ST Home Mode"
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_select.home_status
        to: 'Home'
    action:
      - service: swtich.turn_off
        entity_id: switch.st_awayhome_switch
        
#####MEDIA#####

  # - id: lr_media_paused
    # alias: "Media player paused/stopped"
    # hide_entity: True
    # trigger:
      # - platform: state
        # entity_id: media_player.living_room
        # from: 'playing'
      # - platform: state
        # entity_id: media_player.living_room_roku
        # from: 'playing'
    # condition:
      # - condition: state
        # entity_id: sun.sun
        # state: 'below_horizon'
    # action:
    # ##Fade in Left Lamp
      # - service: python_script.fade_in_light
        # data:
          # entity_id: light.left_light_2
          # delay_in_sec: 1
          # start_level_pct: 5
          # end_level_pct: 60
          # step_in_level_pct: 10
    # ##Fade in Right Lamp
      # - service: python_script.fade_in_light
        # data:
          # entity_id: light.right_light_2
          # delay_in_sec: 1
          # start_level_pct: 5
          # end_level_pct: 60
          # step_in_level_pct: 10
    # ##Fade in Floor Lamp
      # - service: python_script.fade_in_light
        # data:
          # entity_id: light.floor_lamp_2
          # delay_in_sec: 1
          # start_level_pct: 5
          # end_level_pct: 60
          # step_in_level_pct: 10

  # - id: lr_media_play
    # alias: "Media player playing"
    # hide_entity: True
    # trigger:
      # - platform: state
        # entity_id: media_player.living_room
        # to: 'playing'
      # - platform: state
        # entity_id: media_player.living_room_roku
        # to: 'playing'
    # condition:
      # - condition: state
        # entity_id: sun.sun
        # state: 'below_horizon'
    # action:
    # ##Fade out Left Lamp
      # - service: python_script.fade_out_light
        # data:
          # entity_id: light.left_light_2
          # delay_in_sec: 1
          # start_level_pct: 60
          # end_level_pct: 5
          # step_in_level_pct: 10
     # ##Fade out Right Lamp
      # - service: python_script.fade_out_light
        # data:
          # entity_id: light.right_light_2
          # delay_in_sec: 1
          # start_level_pct: 60
          # end_level_pct: 5
          # step_in_level_pct: 10
    # ##Fade out Floor Lamp
      # - service: python_script.fade_out_light
        # data:
          # entity_id: light.floor_lamp_2
          # delay_in_sec: 1
          # start_level_pct: 60
          # end_level_pct: 5
          # step_in_level_pct: 10
          
          


#####PRESENCE#####

###HOME STATE

#   - id: set_home_away
#     alias: Set Home State Away
#     trigger:
#       platform: state
#       entity_id: group.all_mobile_devices
#       to: 'not_home'
#       for:
#         minutes: 2
#     condition:
#       condition: and
#       conditions:
# #      - condition: numeric_state
# #        entity_id: proximity.home
# #        above: 1
#       - condition: state
#         entity_id: input_boolean.force_home
#         state: 'off'
# #      - condition: template
# #        value_template:  '{{ relative_time(states.group.doorsensors.last_changed) < "30 min" }}'
#     action:
#       - service: input_select.select_option
#         data:
#           entity_id: input_select.home_status
#           option: Away
#       - service: climate.set_away_mode
#         data:
#           away_mode: true
#       - service: notify.pushover
#         data:
#           message: "Home state changed to away and system armed."
#           title: "HollandHaus"

#   - id: home_actions
#     alias: Home Actions
#     hide_entity: False
#     trigger:
#       platform: state
#       entity_id: group.all_mobile_devices
#       to: 'home'
#       for:
#         minutes: 1
#     action:
#       - service: notify.pushover
#         data:
#           message: "I see you are home."
#           title: "Home"
#       - service: input_select.select_option
#         data:
#           entity_id: input_select.home_status
#           option: Home
#       - service: alarm_control_panel.alarm_disarm
#         entity_id: alarm_control_panel.shm

#   - id: light_away_actions
#     alias: Light Away Actions
#     trigger:
#       platform: state
#       entity_id: input_select.home_status
#       to: 'Away'
#       for:
#         minutes: 10
#     condition:
#       condition: and
#       conditions:
#       - condition: state
#         entity_id: sun.sun
#         state: 'below_horizon'
#       - condition: time
#         after: '16:00:00'
#       - condition: state
#         entity_id: group.decorative
#         state: 'on'
#       - condition: state
#         entity_id: input_boolean.force_home
#         state: 'off'
# ##ADD IN ALL HOUSE LIGHTS
#     action:
#       - service: scene.turn_on
#         entity_id: scene.decorative_off
#       - service: homeassistant.turn_off
#         entity_id: group.christmas_lights
#       - service: notify.pushover
#         data:
#           message: "I see you have left for the night and some of the lights are still on. I have turned them off for you."
#           title: "HASS"



####ROOMBA#####

###TRIGGER ROOMA WHEN AWAY
  # - alias: Roomba Away Actions
  #   hide_entity: True
  #   trigger:
  #     platform: state
  #     entity_id: input_select.home_status
  #     to: 'Away'
  #     for:
  #       minutes: 10
  #   condition:
  #     condition: and
  #     conditions:
  #       - condition: numeric_state
  #         entity_id: 'sensor.walle_battery'
  #         above: '98'
  #       - condition: time
  #         after: '07:00:00'
  #         before: '21:00:00'
  #       - condition: state
  #         entity_id: input_boolean.force_home
  #         state: 'off'
  #   action:
  #     - service: switch.turn_on
  #       entity_id: switch.walle_clean
  #     - service: notify.pushover
  #       data:
  #         message: "The system has informed me to start cleaning."
  #         title: "Wall-E Starting"

###DOCK ROOMBA WHEN BATTERY LOW
#  - alias: Roomba Battery Low
#    hide_entity: True
#    trigger:
#      platform: numeric_state
#      entity_id: sensor.walle_battery
#      below: 35
#    condition:
#      - condition: state
#        entity_id: switch.walle_clean
#        state: 'on'
#    action:
#      - service: switch.turn_off
#        entity_id: switch.walle_clean
#      - service: switch.turn_on
#        entity_id: switch.walle_dock
#      - service: notify.pushover
#        data:
#          message: "It looks like my battery is getting low, time to dock!"
#          title: "Wall-E Low Battery"


#####TIME OF DAY#####

  # - alias: "Indoor Pre-Sunset Actions"
  #   hide_entity: False
  #   trigger:
  #     - platform: sun
  #       event: sunset
  #       offset: "-00:20:00"
  #   condition:
  #     condition: or
  #     conditions:
  #     - condition: state
  #       entity_id: group.all_mobile_devices
  #       state: home
  #     - condition: state
  #       entity_id: input_boolean.force_home
  #       state: 'on'
  #   action:
  #   ##Fade in Left Light
  #     - service: python_script.fade_in_light
  #       data:
  #         entity_id: light.left_light_2
  #         delay_in_sec: 20
  #         start_level_pct: 0
  #         end_level_pct: 60
  #         step_in_level_pct: 1
  #   ##Fade in Right Light
  #     - service: python_script.fade_in_light
  #       data:
  #         entity_id: light.right_light_2
  #         delay_in_sec: 20
  #         start_level_pct: 0
  #         end_level_pct: 60
  #         step_in_level_pct: 1
  #   ##Fade in Floor Lamp
  #     - service: python_script.fade_in_light
  #       data:
  #         entity_id: light.floor_lamp_2
  #         delay_in_sec: 20
  #         start_level_pct: 0
  #         end_level_pct: 60
  #         step_in_level_pct: 1
  
  # - alias: "Indoor Sunset Actions"
  #   hide_entity: False
  #   trigger:
  #     - platform: sun
  #       event: sunset
  #       offset: "+00:10:00"
  #   condition:
  #     condition: or
  #     conditions:
  #     - condition: state
  #       entity_id: group.all_mobile_devices
  #       state: home
  #     - condition: state
  #       entity_id: input_boolean.force_home
  #       state: 'on'
  #   action:
  #     - service: scene.turn_on
  #       entity_id: scene.decorative_on
  #     - service: homeassistant.turn_on
  #       entity_id: group.christmas_lights

  # - alias: "Outdoor Sunset Actions"
  #   hide_entity: False
  #   trigger:
  #     - platform: sun
  #       event: sunset
  #       offset: "-00:15:00"
  #   action:
  #     - service: switch.turn_on
  #       entity_id: switch.north_up_lights
  #     - service: switch.turn_on
  #       entity_id: switch.liams_tree

  # - alias: "Sunrise Actions No Cloud"
  #   hide_entity: False
  #   trigger:
  #     - platform: sun
  #       event: sunrise
  #   condition:
  #     condition: and
  #     conditions:
  #     - condition: state
  #       entity_id: group.all_mobile_devices
  #       state: home
  #     - condition: numeric_state
  #       entity_id: sensor.dark_sky_cloud_coverage
  #       below: 79
  #   action:
  #     - service: switch.turn_off
  #       entity_id: switch.north_up_lights
  #     - service: switch.turn_off
  #       entity_id: switch.liams_tree
  #     - service: scene.turn_on
  #       entity_id: scene.decorative_off
  #     - service: homeassistant.turn_off
  #       entity_id: group.christmas_lights

  # - alias: "Sunrise Actions with Clouds"
  #   hide_entity: False
  #   trigger:
  #     - platform: sun
  #       event: sunrise
  #       offset: "+01:00:00"
  #   condition:
  #     condition: and
  #     conditions:
  #     - condition: state
  #       entity_id: group.all_mobile_devices
  #       state: home
  #   action:
  #     - service: switch.turn_off
  #       entity_id: switch.north_up_lights
  #     - service: scene.turn_on
  #       entity_id: scene.decorative_off
  #     - service: switch.turn_off
  #       entity_id: switch.liams_tree
  #     - service: switch.turn_off
  #       entity_id: switch.front_lights
  #     - service: homeassistant.turn_off
  #       entity_id: group.christmas_lights

  # - alias: "Turn off Front Lights"
  #   hide_entity: True
  #   trigger:
  #     - platform: time
  #   # When 'at' is used, you cannot also match on hour, minute, seconds.
  #   # Military time format.
  #       at: '23:30:00'
  #   action:
  #     - service: switch.turn_off
  #       entity_id: switch.front_lights

###NOTIFICATION###

##RUN AWAY SCRIPT

##ROOMBA NOTIFICATIONS

  # - alias: Wall-E Start Notification
  #   hide_entity: True
  #   trigger:
  #     platform: state
  #     entity_id: switch.walle_clean
  #     to: 'on'
  #     for:
  #       minutes: 2
  #   action:
  #     - service: notify.pushover
  #       data:
  #         message: "Looks like it is time for me to clean!  Have a great day."
  #         title: "Wall-E"

  # - alias: Wall-E Stop Notification
  #   hide_entity: True
  #   trigger:
  #     platform: state
  #     entity_id: switch.walle_clean
  #     to: 'off'
  #     for:
  #       minutes: 2
  #   action:
  #     - service: notify.pushover
  #       data:
  #         message: "I am all done cleaning."
  #         title: "Wall-E"

  # - alias: Washer Clean Notification Home
  #   hide_entity: True
  #   trigger:
  #     platform: state
  #     entity_id: input_select.washer_status
  #     to: 'Clean'
  #     for:
  #       minutes: 2
  #   condition:
  #       - condition: state
  #         entity_id: group.all_mobile_devices
  #         state: 'home'
  #   action:
  #     - service: notify.pushover
  #       data:
  #         message: "By the way, it looks like the washing machine is done.  Don't forget to move to the dryer!"
  #         title: "HA"

  # - alias: Washer Clean Notification Away
  #   hide_entity: True
  #   trigger:
  #     platform: state
  #     entity_id: group.all_mobile_devices
  #     to: 'home'
  #     for:
  #       minutes: 1
  #   condition:
  #       - condition: state
  #         entity_id: input_select.washer_status
  #         state: 'Clean'
  #   action:
  #     - service: notify.pushover
  #       data:
  #         message: "Welcome home it looks like the washing machine is done.  Don't forget to move to the dryer!"
  #         title: "HA"
#      - service: tts.google_say
#        entity_id: media_player.kitchen_home
#        data:
#          message: 'Welcome Home, it looks like the washer is done. Don't forget to move the clothes to the dryer!'
          