#HASS Version
- platform: version
#BadNest
# - platform: badnest
#System Information
- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /home
    - type: memory_free
#Uptime
- platform: uptime
# Weather Prediction
- platform: darksky
  api_key: !secret dark_sky_api
  scan_interval: "00:15"
  forecast:
    - 0
  hourly_forecast:
    - 0
    - 1
  monitored_conditions:
    - summary
    - precip_type
    - precip_intensity
    - precip_probability
    - temperature
    - apparent_temperature
    - wind_speed
    - wind_bearing
    - cloud_cover
    - humidity
    - daily_summary
    - temperature_high
    - temperature_low
    - precip_intensity_max
    - uv_index
    - nearest_storm_distance
    - nearest_storm_bearing
    - alerts

##Math Sensors for Stocks
- platform: template
  sensors:
    value_doge:
      value_template: "{{ (states.sensor.shares_doge.state|float * states.sensor.yahoofinance_doge_usd.state|float)|round(2) }}"
      unit_of_measurement: "$"
      friendly_name: "Value of DOGE Holdings"
- platform: template
  sensors:
    value_cnk:
      value_template: "{{ (states.sensor.shares_cnk.state|float * states.sensor.yahoofinance_cnk.state|float)|round(2) }}"
      unit_of_measurement: "$"
      friendly_name: "Value of CNK Holdings"
- platform: template
  sensors:
    value_egio:
      value_template: "{{ (states.sensor.shares_egio.state|float * states.sensor.yahoofinance_egio.state|float)|round(2) }}"
      unit_of_measurement: "$"
      friendly_name: "Value of EGIO Holdings"
- platform: template
  sensors:
    value_pfe:
      value_template: "{{ (states.sensor.shares_pfe.state|float * states.sensor.yahoofinance_pfe.state|float)|round(2) }}"
      unit_of_measurement: "$"
      friendly_name: "Value of PFE Holdings"
- platform: template
  sensors:
    value_tsla:
      value_template: "{{ (states.sensor.shares_tsla.state|float * states.sensor.yahoofinance_tsla.state|float)|round(2) }}"
      unit_of_measurement: "$"
      friendly_name: "Value of TSLA Holdings"
- platform: template
  sensors:
    value_vtrs:
      value_template: "{{ (states.sensor.shares_vtrs.state|float * states.sensor.yahoofinance_vtrs.state|float)|round(2) }}"
      unit_of_measurement: "$"
      friendly_name: "Value of VTRS Holdings"
- platform: template
  sensors:
    value_total:
      value_template: "{{ (states.sensor.value_cnk.state|float + states.sensor.value_doge.state|float + states.sensor.value_egio.state|float + states.sensor.value_pfe.state|float + states.sensor.value_tsla.state|float + states.sensor.value_vtrs.state|float)|round(2) }}"
      unit_of_measurement: "$"
      friendly_name: "Value of All Stocks"

#SABNZBD
- platform: sabnzbd
  host: !secret sabnzbd_host
  api_key: !secret sabnzbd_api
  monitored_variables:
    - "current_status"
    - "speed"
    - "queue_size"
    - "queue_remaining"
    - "disk_size"
    - "disk_free"
    - "queue_count"

#ObiHai
- platform: obihai
  host: !secret obihai_host

#Pocket Casts
- platform: pocketcasts
  username: !secret email
  password: !secret casts_pass

#Glances
- platform: glances
  host: !secret server_ip
  resources:
    - "disk_use_percent"
    - "memory_use_percent"
    - "swap_use_percent"
    - "processor_load"

- platform: mqtt
  state_topic: "homeassistant/sensor/log_onenote/url"
  name: "Daily Log Onenote URL"
  qos: 0

- platform: mqtt
  state_topic: "homeassistant/sensor/log_notion/url"
  name: "Daily Log Notion URL"
  qos: 0

- platform: mqtt
  state_topic: "homeassistant/binary_sensor/log_notion/complete"
  name: "Daily Log Notion Complete"
  qos: 0

- platform: mqtt
  state_topic: "homeassistant/binary_sensor/log_onenote/complete"
  name: "Daily Log OneNote Complete"
  qos: 0

- platform: google_fit
  name: Google Fit
  client_id: !secret google_id
  client_secret: !secret google_secret

- platform: template
  sensors:
    google_fit_weight_lbs:
      value_template: '{{ states("sensor.google_fit_weight") | multiply(2.205) | round(1, "half") }}'
      unit_of_measurement: "lb"
      friendly_name: "Google Fit Weight (ft)"

# SDR Meters

##GAS METER
- platform: mqtt
  state_topic: "metermon/66154761"
  name: "Gas Meter Reading"
  qos: 0
  value_template: "{{ value_json.Consumption }}"
  unit_of_measurement: ft^3
  device_class: "gas"

- platform: template
  sensors:
    current_gas_consumption:
      value_template: >
        {% if states.sensor.sensor.gas_meter_reading.attributes.min_value | float == 0 %}0
        {% elif states.sensor.gas_meter_reading.state | float <= states.sensor.gas_stats_mean.attributes.min_value | float %}0
        {% else %}
        {{((states.sensor.gas_meter_reading.state | float) - (states.sensor.gas_stats_mean.attributes.min_value | float)) * 1000 / 10 | max (0) | round(2) }}
        {% endif %}
      unit_of_measurement: "cdm/min"
      friendly_name: "Average Current Gas Consumption (10 min)"

- platform: statistics
  name: gas_stats
  entity_id: sensor.gas_meter_reading
  max_age:
    minutes: 10

##WATER METER
- platform: mqtt
  state_topic: "metermon/31297404"
  name: "Water Meter Reading"
  qos: 0
  value_template: "{{ value_json.Consumption }}"
  unit_of_measurement: gal

#Safety
- platform: template
  sensors:
    smoke_sensor_battery:
      value_template: "{{ states.zwave.smoke_sensor.attributes.battery_level }}"
      unit_of_measurement: "%"
      friendly_name: "Smoke Sensor Battery"
- platform: template
  sensors:
    co_sensor_battery:
      value_template: "{{ states.zwave.co_sensor.attributes.battery_level }}"
      unit_of_measurement: "%"
      friendly_name: "CO Sensor Battery"
#Security
- platform: template
  sensors:
    glass_break_battery:
      value_template: "{{ states.zwave.glass_break.attributes.battery_level }}"
      unit_of_measurement: "%"
      friendly_name: "Glass Break Battery"
#Locks
- platform: template
  sensors:
    front_lock_battery:
      value_template: "{{ states.zwave.front_lock.attributes.battery_level }}"
      unit_of_measurement: "%"
      friendly_name: "Front Lock Battery"
- platform: template
  sensors:
    garage_lock_battery:
      value_template: "{{ states.zwave.garage_entry_lock.attributes.battery_level }}"
      unit_of_measurement: "%"
      friendly_name: "Garage Lock Battery"

##Lock Information
- platform: template
  sensors:
    front_lock_status:
      value_template: "{{ states.lock.front_lock.attributes.lock_status }}"
      friendly_name: "Front Lock Status"

##Washer Power Sensor
- platform: template
  sensors:
    washer_power:
      value_template: "{{ states.switch.washer.attributes.current_power_w }}"
      friendly_name: "Washer Power"

##Google Maps Location Data
- platform: template
  sensors:
    ryan_battery:
      value_template: "{{ states.device_tracker.google_maps_118314383764095593834.attributes.battery_level }}"
      unit_of_measurement: "%"
      friendly_name: "Ryan Phone Battery"
- platform: template
  sensors:
    kristi_battery:
      value_template: "{{ states.device_tracker.google_maps_114680120030307638360.attributes.battery_level }}"
      unit_of_measurement: "%"
      friendly_name: "Kristi Phone Battery"

##presence server
- platform: mqtt
  state_topic: !secret gryanphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Ryan Garage"
- platform: mqtt
  state_topic: !secret 1stryanphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Ryan First Floor"
- platform: mqtt
  state_topic: !secret 2ndryanphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Ryan Second Floor"
- platform: mqtt
  state_topic: !secret brryanphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Ryan Bedroom"
# - platform: mqtt
# state_topic: !secret baseryanphonebt
# value_template: '{{ value_json.confidence }}'
# unit_of_measurement: '%'
# name: 'Ryan Basement'
- platform: mqtt
  state_topic: !secret gkristiphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Kristi Garage"
- platform: mqtt
  state_topic: !secret 1stkristiphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Kristi First Floor"
- platform: mqtt
  state_topic: !secret 2ndkristiphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Kristi Second Floor"
- platform: mqtt
  state_topic: !secret brkristiphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Kristi Bedroom"
# - platform: mqtt
# state_topic: !secret basekristiphonebt
# value_template: '{{ value_json.confidence }}'
# unit_of_measurement: '%'
# name: 'Kristi Basement'
- platform: mqtt
  state_topic: !secret gmomphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Mom Garage"
- platform: mqtt
  state_topic: !secret 1stmomphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Mom First Floor"
- platform: mqtt
  state_topic: !secret 2ndmomphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Mom Second Floor"
# - platform: mqtt
# state_topic: !secret basemomphonebt
# value_template: '{{ value_json.confidence }}'
# unit_of_measurement: '%'
# name: 'Mom Basement'
- platform: mqtt
  state_topic: !secret gdadphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Dad Garage"
- platform: mqtt
  state_topic: !secret 1stdadphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Dad First Floor"
- platform: mqtt
  state_topic: !secret 2nddadphonebt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Dad Second Floor"
- platform: mqtt
  state_topic: !secret gpacificabt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Pacifica Garage"
- platform: mqtt
  state_topic: !secret gvolvobt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Volvo Garage"
- platform: mqtt
  state_topic: !secret 1sttestbt
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Test First Floor"
##BLE Tokens
- platform: mqtt
  state_topic: !secret 1stryankey
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Ryan Keys First Floor"
- platform: mqtt
  state_topic: !secret 1stliambp
  value_template: "{{ value_json.confidence }}"
  unit_of_measurement: "%"
  name: "Liam Backpack First Floor"

##RSSI
- platform: mqtt
  state_topic: !secret gryanrssi
  name: "Ryan Garage Signal Level"
- platform: mqtt
  state_topic: !secret 1stryanrssi
  name: "Ryan LR Signal Level"
##BT presence logic
- platform: min_max
  name: "Ryan Home Occupancy Confidence"
  type: mean
  round_digits: 0
  entity_ids:
    - sensor.ryan_garage
    - sensor.ryan_first_floor
    - sensor.ryan_second_floor
    - sensor.ryan_bedroom
    #  - sensor.ryan_basement
- platform: min_max
  name: "Kristi Home Occupancy Confidence"
  type: mean
  round_digits: 0
  entity_ids:
    - sensor.kristi_garage
    - sensor.kristi_first_floor
    - sensor.kristi_second_floor
    - sensor.kristi_bedroom
    #  - sensor.kristi_basement
- platform: min_max
  name: "Mom Home Occupancy Confidence"
  type: mean
  round_digits: 0
  entity_ids:
    - sensor.mom_first_floor
    - sensor.mom_second_floor
    #  - sensor.mom_basement
- platform: min_max
  name: "Dad Home Occupancy Confidence"
  type: mean
  round_digits: 0
  entity_ids:
    - sensor.dad_first_floor
    - sensor.dad_second_floor
    #  - sensor.mom_basement
##BT Occupancy Sensors
- platform: template
  sensors:
    ryan_occupancy:
      value_template: '{% if states("sensor.ryan_home_occupancy_confidence") | float > 10 %}home{% else %}not_home{%endif %}'
      friendly_name: "Ryan's BT Occupancy"
- platform: template
  sensors:
    kristi_occupancy:
      value_template: '{% if states("sensor.kristi_home_occupancy_confidence") | float > 10 %}home{% else %}not_home{%endif %}'
      friendly_name: "Kristi's BT Occupancy"
- platform: template
  sensors:
    mom_occupancy:
      value_template: '{% if states("sensor.mom_home_occupancy_confidence") | float > 10 %}home{% else %}not_home{%endif %}'
      friendly_name: "Mom's BT Occupancy"
- platform: template
  sensors:
    dad_occupancy:
      value_template: '{% if states("sensor.dad_home_occupancy_confidence") | float > 10 %}home{% else %}not_home{%endif %}'
      friendly_name: "Dad's BT Occupancy"
# - platform: template
#   sensors:
#     outlander:
#       value_template: '{% if states("sensor.outlander_first_floor") | float > 10 %}home{% else %}not_home{%endif %}'
#       friendly_name: "Outlander Garage"
# - platform: template
#   sensors:
#     volvo:
#       value_template: '{% if states("sensor.volvo_first_floor") | float > 10 %}home{% else %}not_home{%endif %}'
#       friendly_name: "Volvo Garage"
##Bayesian Device Tracker
- platform: template
  sensors:
    ryan_home:
      value_template:
        "{% if is_state('sensor.galaxy_note8_room_presence', 'not_home') %}
        not_home
        {% else %}
        home
        {% endif %}"
      friendly_name: Ryan Home
- platform: template
  sensors:
    kristi_home:
      value_template:
        "{% if is_state('sensor.70_ce_8c_a1_b6_8d_room_presence', 'not_home') %}
        not_home
        {% else %}
        home
        {% endif %}"
      friendly_name: Kristi Home
- platform: template
  sensors:
    mom_home:
      value_template: "{% if is_state('binary_sensor.mom_presence', 'on') %}
        Home
        {% else %}
        not_home
        {% endif %}"
      friendly_name: Mom Home
- platform: template
  sensors:
    dad_home:
      value_template: "{% if is_state('binary_sensor.dad_presence', 'on') %}
        Home
        {% else %}
        not_home
        {% endif %}"
      friendly_name: Dad Home

- platform: template
  sensors:
    weather_alert:
      value_template:
        "{% if states.sensor.pws_alerts|regex_search('_TOR') %}Tornado Warning
        {% elif states.sensor.pws_alerts.attributes|regex_search('_TOW') %}Tornado Watch
        {% elif states.sensor.pws_alerts.attributes|regex_search('_WRN') %}Severe Thunderstorm Warning
        {% elif states.sensor.pws_alerts.attributes|regex_search('_FLO') %}Flood Warning
        {% elif states.sensor.pws_alerts.attributes|regex_search('_WIN') %}Winter Storm Advisory
        {% else %}
        No Alert
        {% endif %}"
      friendly_name: Weather Alert

#  - platform: rest
#    sensors:
#      resource: http://localhost:7999/1/detection/status
#      method: GET
#      name: Back Deck Motion Record
#      value_template: '{{ value }}'

#- platform: zoneminder
#  include_archived: false

##PiHole Sensors
- platform: pi_hole
  host: !secret pihole
  monitored_conditions:
    - ads_blocked_today
    - dns_queries_today
    - unique_clients
- platform: template
  sensors:
    home_state:
      value_template: "{{ states.input_select.home_status.state }}"

- platform: mqtt
  name: Upstairs BT Monitor state
  state_topic: "location/upstairs/status"
  icon: mdi:router-wireless

- platform: mqtt
  name: Downstairs BT Monitor state
  state_topic: "location/downstairs/status"
  icon: mdi:router-wireless

  ##TED5000 Command Line Sensors
- platform: command_line
  name: TED Voltage
  command: "curl -X GET http://192.168.1.234/api/LiveData.xml 2>&1 | grep -oPm1 '(?<=<VoltageNow>).*?(?=</VoltageNow>)'"
  unit_of_measurement: "V"
  value_template: "{{ value | float / 10 }}"
  scan_interval: 10

- platform: command_line
  name: TED Power
  command: "curl -X GET http://192.168.1.234/api/LiveData.xml 2>&1 | grep -oPm1 '(?<=<PowerNow>).*?(?=</PowerNow>)'"
  unit_of_measurement: "W"
  value_template: "{{ value }}"
  scan_interval: 10

##Estimated Energy Usage
- platform: template
  sensors:
    hvac_energy:
      unit_of_measurement: "W"
      friendly_name: "HVAC Power Usage"
      value_template: >-
        {% if is_state('{{ states.climate.thermostat.attributes.hvac_action }}', 'cool') %}
          3500
        {% elif is_state('{{ states.climate.thermostat.attributes.hvac_action }}', 'heat')  %}
          550
        {% elif is_state('{{ states.climate.thermostat.attributes.hvac_action }}', 'off') and is_state('{{ states.climate.thermostat.attributes.fan_mode }}', 'on' )  %}
          500
        {% elif is_state('{{ states.climate.thermostat.attributes.hvac_action }}', 'off') and is_state('{{ states.climate.thermostat.attributes.fan_mode }}', 'off' )  %}
          0
        {% else %}
          0
        {% endif %}

- platform: template
  sensors:
    dryer_energy:
      unit_of_measurement: "W"
      friendly_name: "Dryer Power Usage"
      value_template: '{% if states("sensor.dryer_sensor_temperature") | float > 80 %}5300{% else %}0.5{%endif %}'

- platform: time_date
  display_options:
    - "date_time"

- platform: mqtt
  name: Zigbee2mqtt Networkmap
  # if you change base_topic of Zigbee2mqtt, change state_topic accordingly
  state_topic: zigbee2mqtt/bridge/networkmap/raw
  value_template: >-
    {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
  # again, if you change base_topic of Zigbee2mqtt, change json_attributes_topic accordingly
  json_attributes_topic: zigbee2mqtt/bridge/networkmap/raw

##YouTube Information

- platform: rest
  resource: !secret yt_api
  method: GET
  name: "TSH YouTube Subscribers"
  value_template: '{{ (value_json["items"][0].statistics.subscriberCount | int) }}'
  scan_interval: 900

- platform: rest
  resource: !secret yt_api
  method: GET
  value_template: '{{ (value_json["items"][0].statistics.viewCount | int) }}'
  name: "TSH YouTube Views"
  scan_interval: 900

- platform: rest
  resource: !secret yt_search
  method: GET
  value_template: '{{ (value_json["items"][0].id.videoId) }}'
  name: "Latest Peter McKinnen Video"
  scan_interval: 14400

- platform: rest
  resource: !secret yt_search_title
  method: GET
  value_template: '{{ (value_json["items"][0].snippet.title) }}'
  name: "Latest Peter McKinnen Video Title"
  scan_interval: 14400
# - platform: imap
#   server: imap.gmail.com
#   port: 993
#   username: !secret email
#   password: !secret gmail_key

- platform: template
  sensors:
    weather_alert_title:
      value_template: '{% if states("sensor.nws_alerts") | float > 1 %}{{states.sensor.nws_alerts.attributes.title.split(" - ")[0]}}{% elif states("sensor.nws_alerts") | float >0%}{{states.sensor.nws_alerts.attributes.title}}{% else %}No Alert{%endif %}'
      friendly_name: "NWS Alert Title"

- platform: template
  sensors:
    weather_alert_desc:
      value_template: '{% if states("sensor.nws_alerts") | float > 1 %}{{states.sensor.nws_alerts.attributes.display_desc.split("Description: ")[1].split(">")[0]}}{% elif states("sensor.nws_alerts") | float >0%}{{states.sensor.nws_alerts.attributes.display_desc.split("Description:")[1].split(">")[0]}}{% else %}No Alert{%endif %}'
      friendly_name: "NWS Alert Description"

- platform: template
  sensors:
    test_alert_title:
      value_template: '{% if states("sensor.test_alerts") | float > 1 %}{{states.sensor.test_alerts.attributes.title.split(" - ")[0]}}{% elif states("sensor.test_alerts") | float >0%}{{states.sensor.test_alerts.attributes.title}}{% else %}No Alert{%endif %}'
      friendly_name: "NWS Test Alert Title"

- platform: template
  sensors:
    test_alert_desc:
      value_template: '{% if states("sensor.test_alerts") | float > 1 %}{{states.sensor.test_alerts.attributes.display_desc.split("Description")[1].split(">")[0]}}{% elif states("sensor.test_alerts") | float >0%}{{states.sensor.test_alerts.attributes.display_desc.split("Description: ")[1].split(">")[0]}}{% else %}No Alert{%endif %}'
      friendly_name: "NWS Test Alert Description"

##AIR QUALITY SENSOR

- platform: waqi
  token: !secret waqi_token
  locations:
    - "Blue Ridge I-70, Missouri"
    - "Troost, Missouri, USA"
    - "Edinburgh Currie"
    - "Glasgow High Street, United Kingdom"
    - "Xindian, Taiwan"
    - "Bernadette, Zone 6, Philippines"

##CAR SENSORS (TORQUE)
#VOLVO

- platform: mqtt
  state_topic: "torque/volvo/lon"
  name: "Volvo Longitude"
  qos: 0

- platform: mqtt
  state_topic: "torque/volvo/lat"
  name: "Volvo Latitude"
  qos: 0

- platform: mqtt
  state_topic: "torque/volvo/fuel_level"
  name: "Volvo Fuel Level"
  unit_of_measurement: "%"
  qos: 0

- platform: mqtt
  state_topic: "torque/volvo/mpg"
  name: "Volvo Trip MPG"
  unit_of_measurement: "mpg"
  qos: 0

- platform: mqtt
  state_topic: "torque/volvo/trip_dist"
  name: "Volvo Trip Distance"
  unit_of_measurement: "miles"
  qos: 0

- platform: mqtt
  state_topic: "torque/volvo/trip_cost"
  name: "Volvo Trip Cost"
  unit_of_measurement: "$"
  qos: 0

  ##COMMAND LINE SENSORS

# - platform: command_line
#   name: Server Speed Test Data
#   command: "ssh -o UserKnownHostsFile=/config/.ssh/known_hosts -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa root@192.168.1.250 speedtest -f json"
#   value_template: "{{ value_json }}"
#   command_timeout: 45
#   scan_interval: 1800

##ESPresense Sensors
- platform: mqtt_room
  device_id: "apple:1005:9-7"
  name: "Earls Phone BT"
  state_topic: "espresense/devices/apple:1005:9-7"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "md:0735:8"
  name: "UprightGO"
  state_topic: "espresense/devices/md:0735:8"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "tile:f2c4fe819e5f"
  name: "Kristis Keys"
  state_topic: "espresense/devices/tile:f2c4fe819e5f"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "tile:d82dd6f5450f"
  name: "Theo Backpack"
  state_topic: "espresense/devices/tile:d82dd6f5450f"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "tile:cc535b85ac91"
  name: "Liam Backpack"
  state_topic: "espresense/devices/tile:cc535b85ac91"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "tile:dc81059f6ba9"
  name: "Thomas Backpack"
  state_topic: "espresense/devices/tile:dc81059f6ba9"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "samsung:f8042ebb444f"
  name: "Samsung 1"
  state_topic: "espresense/devices/samsung:f8042ebb444f"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "samsung:3868a4ad9ef8"
  name: "Samsung 2"
  state_topic: "espresense/devices/samsung:3868a4ad9ef8"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "sid:0xfe9f"
  name: "Unknown1"
  state_topic: "espresense/devices/sid:0xfe9f"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "sid:0xfeaf"
  name: "Unknown2"
  state_topic: "espresense/devices/sid:0xfeaf"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "espresense/devices/microsoft:ac0c0e77c0fddce7b2d0744f765caec2f392d3bdd9f6b6"
  name: "Windows1"
  state_topic: "espresense/devices/microsoft:ac0c0e77c0fddce7b2d0744f765caec2f392d3bdd9f6b6"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "microsoft:f5d9ae82614f60ace1d538efa45c8d7a65f647239e7a59"
  name: "Little Laptop"
  state_topic: "espresense/devices/microsoft:f5d9ae82614f60ace1d538efa45c8d7a65f647239e7a59"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "sid:0xfd5a"
  name: "SmartTag Backpack"
  state_topic: "espresense/devices/sid:0xfd5a"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "iBeacon:fabcc837-20aa-46f7-92b7-cdf69251559e-100-1"
  name: "Ryan's Phone ESP"
  state_topic: "espresense/devices/iBeacon:fabcc837-20aa-46f7-92b7-cdf69251559e-100-1"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "iBeacon:6a99ca2a-6eda-45d6-a254-63befd63eaba-100-1"
  name: "Kristi's Phone ESP"
  state_topic: "espresense/devices/iBeacon:6a99ca2a-6eda-45d6-a254-63befd63eaba-100-1"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "mifit:eade17cce1d2"
  name: "Ryan's MiBand"
  state_topic: "espresense/devices/mifit:eade17cce1d2"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "samsung:4181657cd0c8"
  name: "Ryan's Watch 4"
  state_topic: "espresense/devices/samsung:4181657cd0c8"
  timeout: 60
  away_timeout: 120

- platform: mqtt_room
  device_id: "garmin:db921a4f120a"
  name: "Liam's Garmin"
  state_topic: "espresense/devices/garmin:db921a4f120a"
  timeout: 60
  away_timeout: 120

  ##Power Integration Sensors
- platform: integration
  source: sensor.3d_printer_power
  name: 3d_printer_energy_spent
  unit_prefix: k
  round: 2

- platform: integration
  source: sensor.living_room_plug_power
  name: lr_plug_energy_spent
  unit_prefix: k
  round: 2

- platform: integration
  source: sensor.rain
  name: Rain_Guage
  round: 2

#   ##Truck Test
# - platform: rest
#   name: Truck Test
#   resource: https://eld.denixsystem.com/api/api.php?api=user&key=27975246E45E136B3BF8E2F8A2005343&cmd=OBJECT_GET_LOCATIONS,861107034133646
#   value_template: "{{ value_json.861107034133646.name }}"
#   json_attributes_path: "$.861107034133646"
#   scan_interval: 60
#   json_attributes:
#     - "name"
#     - "lat"
#     - "lng"
#     - "dt_server"
#     - "dt_tracker"
#     - "speed"
#     - "params.dtc1"
# - platform: template
#   sensors:
#     truck_trip_dist:
#       value_template: "{{ state_attr("sensor.truck_parameters","spn244")|multiply(0.621371)|round(2) }}"
#       unit_of_measurement: "mi"
#       friendly_name: "Truck Trip Distance"

##SwitchBot
- platform: rest
  name: "Twins Room Humidifier"
  resource: !secret switchbot_humidifier_status_url
  method: GET
  scan_interval: 300
  headers:
    Authorization: !secret switchbot_api
    Content-Type: "application/json"
  value_template: "{{ value_json.body.power }}"
  json_attributes_path: "$.body"
  json_attributes:
    - humidity
    - temperature
    - nebulizationEfficiency
    - auto
    - childLock
    - sound
    - lackWater

###SwitchBot Sensors
##Rest Sensors
- platform: rest
  name: "Office Room Sensor"
  resource: !secret switchbot_meter_status_url
  # icon: mdi:thermometer
  method: GET
  scan_interval: 300
  headers:
    Authorization: !secret switchbot_api
    Content-Type: "application/json"
  value_template: >-
    {% set t = value_json.body.temperature | float %}
    {{((t)*9/5)+32}}
  json_attributes_path: "$.body"
  json_attributes:
    - humidity

- platform: rest
  name: "Living Room Sensor"
  resource: !secret switchbot_lrmeter_status_url
  # icon: mdi:thermometer
  method: GET
  scan_interval: 300
  headers:
    Authorization: !secret switchbot_api
    Content-Type: "application/json"
  value_template: >-
    {% set t = value_json.body.temperature | float %}
    {{((t)*9/5)+32}}
  json_attributes_path: "$.body"
  json_attributes:
    - humidity

- platform: rest
  name: "Bedroom Room Sensor"
  resource: !secret switchbot_bedroommeter_status_url
  # icon: mdi:thermometer
  method: GET
  scan_interval: 300
  headers:
    Authorization: !secret switchbot_api
    Content-Type: "application/json"
  value_template: >-
    {% set t = value_json.body.temperature | float %}
    {{((t)*9/5)+32}}
  json_attributes_path: "$.body"
  json_attributes:
    - humidity

- platform: rest
  name: "Office Overhead Light"
  resource: !secret switchbot_office_light_status_url
  method: GET
  scan_interval: 300
  headers:
    Authorization: !secret switchbot_api
    Content-Type: "application/json"
  value_template: "{{ value_json.body.power }}"

- platform: rest
  name: "Coffee Pot"
  resource: !secret switchbot_coffee_status_url
  method: GET
  scan_interval: 300
  headers:
    Authorization: !secret switchbot_api
    Content-Type: "application/json"
  value_template: "{{ value_json.body.power }}"

  ##Plugs

- platform: template
  sensors:
    garage_charging_power:
      friendly_name: "Garage Charging Power"
      value_template: "{{ state_attr('sensor.garage_charging_plug','weight')|float }}"
      unit_of_measurement: "W"

- platform: template
  sensors:
    kettle_plug_power:
      friendly_name: "Kettle Plug Power"
      value_template: "{{ state_attr('sensor.kettle_plug','weight')|float }}"
      unit_of_measurement: "W"

- platform: template
  sensors:
    monitor_switch_power:
      friendly_name: "Monitor Switch Power"
      value_template: "{{ state_attr('sensor.monitor_switch','weight')|float }}"
      unit_of_measurement: "W"

##Locks
- platform: rest
  name: "Back Door Lock"
  resource: !secret switchbot_backlock_status_url
  method: GET
  scan_interval: 300
  headers:
    Authorization: !secret switchbot_api
    Content-Type: "application/json"
  value_template: "{{ value_json.body.lockState }}"

## Template Sensors
- platform: template
  sensors:
    office_room_temp:
      friendly_name: "Office Room Temperature"
      value_template: "{{ states('sensor.office_room_sensor')|float }}"
      unit_of_measurement: "°F"

- platform: template
  sensors:
    office_room_hum:
      friendly_name: "Office Room Humidity"
      value_template: "{{ state_attr('sensor.office_room_sensor','humidity')|float }}"
      unit_of_measurement: "%"

- platform: template
  sensors:
    bedroom_room_temp:
      friendly_name: "Bedroom Room Temperature"
      value_template: "{{ states('sensor.bedroom_room_sensor')|float }}"
      unit_of_measurement: "°F"

- platform: template
  sensors:
    bedroom_room_hum:
      friendly_name: "Bedroom Room Humidity"
      value_template: "{{ state_attr('sensor.bedroom_room_sensor','humidity')|float }}"
      unit_of_measurement: "%"

- platform: template
  sensors:
    living_room_temp:
      friendly_name: "Living Room Temperature"
      value_template: "{{ states('sensor.living_room_sensor')|float }}"
      unit_of_measurement: "°F"

- platform: template
  sensors:
    living_room_hum:
      friendly_name: "Living Room Humidity"
      value_template: "{{ state_attr('sensor.living_room_sensor','humidity')|float }}"
      unit_of_measurement: "%"

- platform: template
  sensors:
    tank_level_indicator:
      friendly_name: "Tank Level Indicator"
      value_template: >
        {% if states('input_number.tank_level')|int < 20 %}
          Red
        {% elif  states('input_number.tank_level')|int < 40 %}
          Yellow
        {% else %}
          Green
        {% endif %}

# pnbruckner's sensor component as a template.
# https://github.com/pnbruckner/ha-illuminance/blob/master/custom_components/illuminance/sensor.py
- platform: template
  sensors:
    outdoor_illuminance:
      friendly_name: Outdoor Illuminance Educated Guessor
      icon_template: mdi:brightness-auto
      unit_of_measurement: lx
      attribute_templates:
        current_condition: |
          {%- set factors = namespace(current_condition='') %}

          {#- Retrieve the current condition and normalize the value #}
          {%- set weather_sensors = [
            "weather.accuweather",
            "sensor.openweathermap_condition",
            "sensor.cc_weather_condition"
          ] %}
          {%- for sensor in weather_sensors if states(sensor) != "unknown" and factors.current_condition == "" %}
            {%- set factors.current_condition = states(sensor) %}
          {%- endfor %}
          {%- set current_condition = factors.current_condition|lower|replace("partly cloudy w/ ","")|replace("mostly cloudy w/ ","")|replace("freezing","")|replace("and","")|replace("-", " ")|replace("_", " ")|replace("(","")|replace(")","")|replace(" ", "") %}

          {{ current_condition }}
        condition_factor: |
          {% set factors = namespace(condition='') %}
          {% set current_condition = state_attr("sensor.outdoor_illuminance","current_condition") %}

          {%- set condition_factors = {
            "10000": ("clear", "clearnight", "sunny", "windy", "exceptional"),
            "7500": ("partlycloudy", "partlysunny", "mostlysunny", "mostlyclear", "hazy", "hazysunshine", "intermittentclouds"),
            "2500": ("cloudy", "mostlycloudy"),
            "1000": ("fog", "rainy", "showers", "pouring", "snowy", "snowyheavy", "snowyrainy", "flurries", "chanceflurries", "chancerain", "chancesleet", "drearyovercast", "sleet"),
            "200": ("hail", "lightning", "tstorms")
          } %}
          {%- for factor in condition_factors if current_condition in condition_factors[factor] %}
            {%- set factors.condition = factor %}
          {%- endfor %}

          {{ factors.condition }}
        sun_factor: |
          {% set factors = namespace(sun='') %}

          {%- set right_now = now() | as_timestamp %}
          {%- set sunrise = states("sensor.sunrise") | as_timestamp %}
          {%- set sunrise_begin = states("sensor.dawn") | as_timestamp %}
          {%- set sunrise_end = sunrise + (40 * 60) %}
          {%- set sunset = states("sensor.sunset") | as_timestamp %}
          {%- set sunset_begin = sunset - (40 * 60) %}
          {%- set sunset_end = states("sensor.dusk") | as_timestamp %}
          {%- if sunrise_end < right_now and right_now < sunset_begin %}
            {%- set factors.sun = 1 %}
          {%- elif sunset_end < right_now or right_now < sunrise_begin %}
            {%- set factors.sun = 0 %}
          {%- elif right_now <= sunrise_end %}
            {%- set factors.sun = (right_now - sunrise_begin) / (60*60) %}
          {%- else %}
            {%- set factors.sun = (sunset_end - right_now) / (60*60) %}
          {%- endif %}

          {%- set factors.sun = 1 if factors.sun > 1 else factors.sun %}

          {{ factors.sun }}
      value_template: |
        {%- set sun_factor = state_attr("sensor.outdoor_illuminance","sun_factor") %}
        {%- set condition_factor = state_attr("sensor.outdoor_illuminance","condition_factor") %}

        {# Take an educated guess #}
        {%- set illuminance = (sun_factor|float * condition_factor|float) | round %}
        {%- set illuminance = 10 if illuminance < 10 else illuminance %}
        {{ illuminance }}

- platform: sun2
  monitored_conditions:
    - solar_midnight
    - astronomical_dawn
    - nautical_dawn
    - dawn
    - sunrise
    - solar_noon
    - sunset
    - dusk
    - nautical_dusk
    - astronomical_dusk
    - daylight
    - civil_daylight
    - nautical_daylight
    - astronomical_daylight
    - night
    - civil_night
    - nautical_night
    - astronomical_night
    - elevation
    - min_elevation
    - max_elevation
    - sun_phase
    - deconz_daylight

##Google Keep
- platform: google_keep
  username: !secret email
  password: !secret google_keep.password
  # labels:
  #   - 'Home Assistant'
  # pinned: true

- platform: email
  email: !secret email
  password: !secret google_imap_pass

- platform: rest
  name: "Garage Charging Plug"
  resource: !secret switchbot_garage_charging_status_url
  method: GET
  scan_interval: 600
  icon: mdi:power-socket-us
  headers:
    Authorization: !secret switchbot_api
    Content-Type: "application/json"
  value_template: "{{ value_json.body.power }}"
  json_attributes_path: "$.body"
  json_attributes:
    - weight
    - voltage
    - electricCurrent
    - electricityOfDay

- platform: rest
  name: "Kettle Plug"
  resource: !secret switchbot_kettle_plug_status_url
  method: GET
  scan_interval: 600
  icon: mdi:power-socket-us
  headers:
    Authorization: !secret switchbot_api
    Content-Type: "application/json"
  value_template: "{{ value_json.body.power }}"
  json_attributes_path: "$.body"
  json_attributes:
    - weight
    - voltage
    - electricCurrent
    - electricityOfDay

- platform: rest
  name: "Monitor Switch"
  resource: !secret switchbot_office_monitor_status_url
  method: GET
  scan_interval: 600
  icon: mdi:power-socket-us
  headers:
    Authorization: !secret switchbot_api
    Content-Type: "application/json"
  value_template: "{{ value_json.body.power }}"
  json_attributes_path: "$.body"
  json_attributes:
    - weight
    - voltage
    - electricCurrent
    - electricityOfDay
