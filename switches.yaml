#  - platform: thinkingcleaner
#  - platform: wake_on_lan
#    mac_address: "e0-69-95-8d-54-74"
#    host: spike
#    name: Wake Spike
#  - platform: insteon_local
# - platform: mqtt
#   name: "ST Vacation/Home Switch"
#   state_topic: "smartthings/zzVacationHomeSwitch/switch/state"
#   command_topic: "smartthings/zzVacationHomeSwitch/switch/set"
#   payload_on: "on"
#   payload_off: "off"
#   optimistic: false
#   qos: 0
#   retain: false
# - platform: mqtt
#   name: "ST Good Morning/Night Switch"
#   state_topic: "smartthings/zzGoodMorningNight/switch/state"
#   command_topic: "smartthings/zzGoodMorningNight/switch/set"
#   payload_on: "on"
#   payload_off: "off"
#   qos: 0
#   retain: false
# - platform: mqtt
#   name: "ST Away/Home Switch"
#   state_topic: "smartthings/zzHomeAwaySwitch/switch/state"
#   command_topic: "smartthings/zzHomeAwaySwitch/switch/set"
#   payload_on: "on"
#   payload_off: "off"
#   qos: 0
#   retain: false
# - platform: mqtt
#   name: "Guest Mode"
#   state_topic: "smartthings/zzGuestMode/switch"
#   command_topic: "smartthings/zzGuestMode/switch/set"
#   payload_on: "on"
#   payload_off: "off"
#   qos: 0
#   retain: false
# - platform: mqtt
#   name: "Railing Lights"
#   state_topic: "smartthings/Railing Lights/switch"
#   command_topic: "smartthings/Railing Lights/switch/set"
#   payload_on: "on"
#   payload_off: "off"
#   qos: 0
#   retain: false
# - platform: mqtt
#   name: "Living Room Fan"
#   state_topic: "smartthings/Living Room Fan/switch"
#   command_topic: "smartthings/Living Room Fan/switch/set"
#   payload_on: "on"
#   payload_off: "off"
#   qos: 0
#   retain: false
# - platform: mqtt
#   name: "North Up Lights"
#   state_topic: "smartthings/North Up Lights/switch"
#   command_topic: "smartthings/North Up Lights/switch/set"
#   payload_on: "on"
#   payload_off: "off"
#   qos: 0
#   retain: false
# - platform: mqtt
#   name: "Driveway Camera Switch"
#   state_topic: "smartthings/Driveway Camera Switch/switch"
#   command_topic: "smartthings/Driveway Camera Switch/switch/set"
#   payload_on: "on"
#   payload_off: "off"
#   qos: 0
#   retain: false
##Insteon Switches
# - platform: mqtt
#   name: "Front Lights"
#   state_topic: "smartthings/Front Lights/switch"
#   command_topic: "smartthings/Front Lights/switch/set"
#   payload_on: "on"
#   payload_off: "off"
#   qos: 0
#   retain: false
##ZoneMinder
#  - platform: zoneminder
#    command_on: Modect
#    command_off: Monitor

#Roomba Switches
# - platform: mqtt
#   name: "EVA"
#   command_topic: "EVA/commands"
#   payload_on: "start"
#   payload_off: "stop"

# - platform: mqtt
#   name: "WALL-E"
#   command_topic: "WALL-E/commands"
#   payload_on: "start"
#   payload_off: "stop"

#ZigBee2MQTT
- platform: mqtt
  name: "Zigbee2mqtt Main join"
  state_topic: "zigbee2mqtt/bridge/config/permit_join"
  command_topic: "zigbee2mqtt/bridge/config/permit_join"
  payload_on: "true"
  payload_off: "false"

- platform: wake_on_lan
  mac: !secret big_laptop_mac
  host: !secret big_laptop_host

- platform: command_line
  switches:
    led_weather:
      command_on: "ssh -o UserKnownHostsFile=/config/.ssh/known_hosts -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa pi@192.168.1.219 sudo python /home/pi/led-matrix-weatherstation/weatherstation.py &"
      command_off: "ssh -o UserKnownHostsFile=/config/.ssh/known_hosts -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa  pi@192.168.1.219 sudo pkill -f weatherstation.py"
      command_state: "ssh -o UserKnownHostsFile=/config/.ssh/known_hosts -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa  pi@192.168.1.219 pgrep -a python | grep 'weatherstation.py'"
      value_template: '{{ "python" in value }}'

###SwitchBot
##Bots
- platform: template
  switches:
    office_overhead_light:
      value_template: "{{ is_state('sensor.office_overhead_light', 'on') }}"
      turn_on:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_office_light_deviceId
          command: "turnOn"
      turn_off:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_office_light_deviceId
          command: "turnOff"

- platform: template
  switches:
    coffee_pot:
      value_template: "{{ is_state('sensor.coffee_maker', 'on') }}"
      turn_on:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_coffee_deviceId
          command: "turnOn"
      turn_off:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_coffee_deviceId
          command: "turnOff"

##Plugs
# - platform: template
#   switches:
#     garage_charging:
#       value_template: "{{ is_state('sensor.garage_charging_plug', 'on') }}"
#       turn_on:
#         service: rest_command.switchbot_device_command
#         data:
#           deviceId: !secret switchbot_garage_charging_deviceId
#           command: "turnOn"
#       turn_off:
#         service: rest_command.switchbot_garage_charging_command
#         data:
#           deviceId: !secret switchbot_garage_charging_deviceId
#           command: "turnOff"

- platform: rest
  name: "Garage Charging Station"
  resource: !secret switchbot_garage_charging_control_url
  body_on: '{"command": "turnOn"}'
  body_off: '{"command": "turnOff"}'
  is_on_template: "{{ value_json.is_active }}"
  headers:
    Authorization: "{{ states('sensor.switchbot_authorization') }}"
    sign: "{{ states('sensor.switchbot_sign') }}"
    t: "{{ states('sensor.switchbot_t') }}"
    Content-Type: "application/json; charset=utf8"
  verify_ssl: true

##Locks
# - platform: template
#   switches:
#     coffee_pot:
#       value_template: "{{ is_state('sensor.coffee_maker', 'on') }}"
#       turn_on:
#         service: rest_command.switchbot_device_command
#         data:
#           deviceId: !secret switchbot_backlock_deviceId
#           command: "turnOn"
#       turn_off:
#         service: rest_command.switchbot_device_command
#         data:
#           deviceId: !secret switchbot_backlock_deviceId
#           command: "turnOff"

- platform: rest
  resource: !secret octopi_light_url
  name: "OctoPi Overhead Lights"
  body_on: '{"lights_on"}'
  body_off: '{"lights_off"}'
  is_on_template: "{{ value_json.lights_on }}"
  headers:
    Content-Type: application/json
    X-Api-Key: !secret octopi_api
  verify_ssl: false

- platform: rest
  resource: !secret octopi_light_url
  name: "OctoPi Torch Mode"
  body_on: '{"torch_on"}'
  body_off: '{"torch_off"}'
  is_on_template: "{{ value_json.torch_on }}"
  headers:
    Content-Type: application/json
    X-Api-Key: !secret octopi_api
  verify_ssl: false
